<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="katachi.spring.portfolio.repository.RoomMapper">
	<resultMap type="katachi.spring.portfolio.domain.user.model.Room" id="Room">
		<id column="room_id" property="roomId"/>
		<result column="room_name" property="roomName"/>
		<result column="deletion_flag" property="deletionFlag"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		<result column="deleted_at" property="deletedAt"/>
		<collection property="roomUserList" ofType="katachi.spring.portfolio.domain.user.model.RoomUser" columnPrefix="room_user_">
			<id column="room_user_id" property="roomUserId"/>
			<result column="room_id" property="roomId"/>
			<result column="user_id" property="userId"/>
			<result column="current_user_id" property="currentUserId"/>
			<result column="created_at" property="createdAt"/>
			<result column="deleted_at" property="deletedAt"/>
			<result column="deletion_flag" property="deletionFlag"/>
		</collection>
	</resultMap>
	
<!-- 
	<resultMap type="katachi.spring.portfolio.domain.user.model.RoomUser" id="roomUser">
		<id column="room_user_id" property="roomUserId"/>
		<result column="room_id" property="roomId"/>
		<result column="current_user_id" property="currentUserId"/>
		<result column="created_at" property="createdAt"/>
		<result column="deleted_at" property="deletedAt"/>
		<result column="deletion_flag" property="deletionFlag"/>
	</resultMap>
 -->
	
	
	<select id="findMany" resultMap="Room">
		select * from rooms as rooms 
			inner join room_users as room_users
			on (room_users.user_id = #{userId})
			and (room_users.room_id = rooms.room_id)
			and (room_users.deletion_flag	 != 1)
		 where rooms.deletion_flag = 0
	</select>
	
	<select id="findRooms" resultMap="Room">
		select rooms.*,
			   room_users.user_id as room_user_user_id,
			   room_users.room_id as room_user_room_id
		from   rooms as rooms 
		inner  join room_users as room_users
		on     room_users.room_id = rooms.room_id
<!--			join room_users as room_users-->
<!--			on room_users.user_id = #{userId}-->
<!--			and rooms.room_id = room_users.room_id-->
		 where 
		 	(rooms.deletion_flag = 0)
<!--			and	rooms.room_id = #{room.roomId}-->
			and(rooms.room_name like '%' #{room.roomName} '%')
<!-- 
			and(rooms.room_id = room_users.room_id);
 -->
	</select>
	
	
	<insert id="insertOne" useGeneratedKeys="true" keyProperty="roomId" keyColumn="room_id">
		insert into rooms(
			room_name,
			deletion_flag,
			created_at
		)
		values
		(
			#{room.roomName},
			0,
			now()
		)
	</insert>
	<select id="findARoomName">
		select room_name from rooms
		 where rooms.room_id = #{roomId} and rooms.deletion_flag = 0
	</select>
</mapper>