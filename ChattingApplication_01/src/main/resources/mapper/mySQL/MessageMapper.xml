<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="katachi.spring.portfolio.repository.MessageMapper">
	<resultMap type="katachi.spring.portfolio.domain.user.model.Message" id="message">
		<id column="message_id" property="messageId"/>
		<result column="content" property="content"/>
		<result column="room_id" property="roomId"/>
		<result column="user_id" property="userId"/>
		<!-- 
		<result column="image" property="image"/>
		 -->
		<result column="deletion_flag" property="deletionFlag"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		<result column="deleted_at" property="deletedAt"/>
		<collection property="mUser" resultMap="mUser" columnPrefix="muser_"/>
	</resultMap>
	
	<resultMap type="katachi.spring.portfolio.domain.user.model.MUser" id="mUser">
		<id column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="email_address" property="emailAddress"/>
		<result column="password" property="password"/>
		<result column="password_confirmation" property="passwordConfirmation"/>
		<result column="role" property="role"/>
		<result column="deletion_flag" property="deletionFlag"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		<result column="deleted_at" property="deletedAt"/>
		<result column="image" property="image"/>
	</resultMap>
	
	
	
	<select id="findMany" resultMap="message">
		select messages.*,
<!--				users.*,-->
<!--				room_users.*-->
			   <!-- 
			   messages.message_id as messages_message_id,
			   messages.content as messages_content,
			   messages.room_id as messages_room_id,
			   messages.user_id as messages_user_id,
			   messages.deletion_flag as messages_deletion_flag,
			   messages.created_at as messages_created_at,
			   messages.updated_at as messages_updated_at,
			   messages.deleted_at as messages_deleted_at,
			   -->
			    
			   users.user_id as muser_user_id,
			   users.user_name as muser_user_name,
			   users.email_address as muser_email_address,
			   users.role as muser_role,
			   users.deletion_flag as muser_deletion_flag,
			   users.created_at as muser_created_at,
			   users.updated_at as muser_updated_at,
			   users.deleted_at as muser_deleted_at,
			   users.image as muser_image
			    
		  from messages
		  inner join room_users
		  		on (messages.room_id = room_users.room_id
		  			and messages.user_id = room_users.user_id)
		  inner join users
			on room_users.user_id = users.user_id
		  where messages.room_id = #{roomId} and messages.deletion_flag = 0
	</select>
	<insert id="insertOne">
		insert into messages(
			content,
			room_id,
			user_id,
			deletion_flag,
			created_at
		)
		values
		(
			#{content},
			#{roomId},
			#{userId},
			0,
			now()
		)
	</insert>
	
	<update id="deleteOne">
		update messages
			set
				deletion_flag = 1,
				deleted_at = now()
			where
					message_id = #{messageId} and user_id = #{userId} and deletion_flag = 0
	</update>

</mapper>